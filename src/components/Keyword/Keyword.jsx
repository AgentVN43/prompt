import React, { useEffect, useState } from "react";
import { Form, Input, Button, Layout, Card, message, Row, Col } from "antd";
import { SaveOutlined } from "@ant-design/icons";
import { saveAs } from "file-saver";
import AiButton from "../AiButton/AiButton";

const { Sider, Content } = Layout;

export default function Keyword() {
  const [form] = Form.useForm();
  const [jsonData, setJsonData] = useState(null);
  const [aiResponse, setAiResponse] = useState(null);
  const [genTitle, setGenTitle] = useState(null);
  const [aiTitleResponse, setAiTitleResponse] = useState(null);
  const [result, setResult] = useState(null);
  console.log("üöÄ ~ Keyword ~ result:", result)

  const onFinish = (values) => {
    const structuredData = {
      request: `Create a keyword set according to the information below to ensure SEO standards.`,
      result_type: "json",
      notes: "not fluff",
      website: {
        name: values.websiteName,
        url: values.websiteUrl,
        location: values.location,
      },

      products: values.products.split(",").map((p) => p.trim()),

      brand: values.brand,

      target_audience: values.targetAudience.split(",").map((p) => p.trim()),

      seo_keywords: {
        general: [
          `${values.products} nh·∫≠p kh·∫©u`,
          `${values.products} gi√° r·∫ª`,
          `${values.products} cao c·∫•p`,
        ],

        location_based: values.location
          ? [
            `${values.products} ${values.location}`,
            `mua ${values.products} t·∫°i ${values.location}`,
            `${values.products} gi√° t·ªët ·ªü ${values.location}`,
          ]
          : [],

        brand_based: values.brand
          ? [
            `${values.products} ${values.brand}`,
            `${values.products} ${values.brand} ch√≠nh h√£ng`,
            `${values.products} ${values.brand} gi√° r·∫ª`,
          ]
          : [],

        long_tail: values.products
          ? values.products
            .split(",")
            .map(
              (product) =>
                `mua ${product.trim()} ch·∫•t l∆∞·ª£ng cao t·∫°i ${values.location}`
            )
          : [],

        lsi: [
          `mua ${values.products} ·ªü ƒë√¢u`,
          `c√°ch ch·ªçn ${values.products} t·ªët`,
          `${values.products} c√≥ t·ªën ƒëi·ªán kh√¥ng`,
          `so s√°nh ${values.products} v√† b·∫øp h·ªìng ngo·∫°i`,
          `${values.products} d√πng c√≥ an to√†n kh√¥ng`,
          `${values.products} ph√π h·ª£p v·ªõi gia ƒë√¨nh n√†o`,
          values.location ? `∆∞u ƒë√£i ${values.products} t·∫°i ${values.location}` : "",
          values.brand ? `${values.products} ${values.brand} c√≥ t·ªët kh√¥ng` : "",
        ].filter(Boolean), // X√≥a c√°c gi√° tr·ªã r·ªóng n·∫øu location ho·∫∑c brand kh√¥ng c√≥
      },
    };

    setJsonData(structuredData);
  };

  const gentitle = (aiResponse) => {
    if (!aiResponse) {
      message.warning("Ch∆∞a c√≥ d·ªØ li·ªáu AI ƒë·ªÉ t·∫°o ti√™u ƒë·ªÅ!");
      return;
    }

    const structuredData = {
      aiResponse,
      request: `Follow list keyword to aiResponse create 10 Vietnamese titles for website posts, following title_guidelines, thinking before response`,
      result_type: "plain text, separated by commas `;`",
      notes: "just vietnamese, not fluff, Do not arbitrarily add unnecessary data",
      title_guidelines: {
        use_primary_keyword_first: {
          description: "Start the title with the primary keyword.",
          example: "10 Cruise Packing Tips to Avoid Overpacking",
        },
        highlight_pain_point_or_benefit: {
          description: "Clearly highlight a problem or benefit in the title.",
          example: "How to Pack for a Cruise Without Overpacking.",
        },
        character_limit: {
          description:
            "Keep the title under 60 characters for optimal SEO display.",
          example: "5 Ways to Improve Your Photography Skills",
        },
        include_number_if_relevant: {
          description:
            "Use numbers in the title when appropriate to increase engagement.",
          example: "5 Ways to Improve Your Photography Skills",
        },
        talk_directly_to_audience: {
          description:
            "Write the title directly addressing the target audience.",
          example: "SEO Tips Every Travel Blogger Needs to Know.",
        },
        be_specific: {
          description: "Provide clear and specific information.",
          example: "How to Start a Travel Blog on WordPress in 3 Easy Steps.",
        },
        evoke_emotion_or_curiosity: {
          description: "Use words that spark emotion or curiosity.",
          example: "5 Surprising SEO Mistakes That Are Killing Your Traffic",
        },
        unique_angle: {
          description:
            "Make the title stand out by offering a unique perspective.",
          example: "10 Wedding Budget Hacks You Haven‚Äôt Heard Before",
        },
        clarity_over_cleverness: {
          description:
            "Prioritize clarity and readability over being overly clever.",
          example: "How to Bake the Perfect Sourdough Bread",
        },
        break_up_sentences: {
          description:
            "Use punctuation like colons, periods, or brackets to break up sentences for readability.",
          example: "How to Start a Blog (And Make Money While You Sleep)",
        },
        address_common_objections: {
          description:
            "Tackle common concerns or objections readers might have.",
          example: "Quick Dinner Recipes for Families With Picky Eaters",
        },
      },
    };

    setGenTitle(structuredData); // C·∫≠p nh·∫≠t state ƒë·ªÉ render l·∫°i AiButton
  };

  //   const saveToFile = (data) => {
  //     const blob = new Blob([JSON.stringify(data, null, 2)], {
  //       type: "application/json",
  //     });
  //     saveAs(blob, "project.json");
  //     message.success("D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c l∆∞u v√†o project.json");
  //   };

  useEffect(() => {
    setResult(aiTitleResponse?.split(";").map((p) => p.trim()))
  }, [aiTitleResponse])
  return (
    <Layout style={{ height: "100vh", padding: "20px" }}>
      {/* D√≤ng 1: Form nh·∫≠p d·ªØ li·ªáu */}
      <Row gutter={16}>
        <Col span={24}>
          <Card>
            <Form form={form} layout="inline" onFinish={onFinish}>
              <Form.Item
                name="websiteName"
                label="T√™n Website"
                rules={[{ required: true }]}
              >
                <Input />
              </Form.Item>
              <Form.Item
                name="websiteUrl"
                label="URL Website"
                rules={[{ required: true }]}
              >
                <Input />
              </Form.Item>
              <Form.Item
                name="location"
                label="V·ªã tr√≠"
                rules={[{ required: true }]}
              >
                <Input />
              </Form.Item>
              <Form.Item
                name="products"
                label="S·∫£n ph·∫©m"
                rules={[{ required: true }]}
              >
                <Input />
              </Form.Item>
              <Form.Item
                name="brand"
                label="Th∆∞∆°ng hi·ªáu"
                rules={[{ required: true }]}
              >
                <Input />
              </Form.Item>
              <Form.Item
                name="targetAudience"
                label="Kh√°ch h√†ng m·ª•c ti√™u"
                rules={[{ required: true }]}
              >
                <Input />
              </Form.Item>
              <Button type="primary" htmlType="submit" icon={<SaveOutlined />}>
                L∆∞u D·ªØ Li·ªáu
              </Button>
            </Form>
          </Card>
        </Col>
      </Row>

      {/* D√≤ng 2: JSON Preview (Left) v√† AI Response (Right) */}
      <Row gutter={16} style={{ marginTop: "20px" }}>
        {/* C·ªôt 2: JSON Preview */}
        <Col span={16}>
          <Card title="Xem tr∆∞·ªõc JSON">
            {jsonData ? (
              <pre>{JSON.stringify(jsonData, null, 2)}</pre>
            ) : (
              "Nh·∫≠p d·ªØ li·ªáu ƒë·ªÉ xem tr∆∞·ªõc JSON"
            )}
            {
              <AiButton
                prompts={[JSON.stringify(jsonData)]}
                onComplete={(data) => setAiResponse(data.response)}
              />
            }
          </Card>
        </Col>

        {/* C·ªôt 3: K·∫øt qu·∫£ AI */}
        <Col span={8}>
          <Card title="üîπ K·∫øt qu·∫£ keyword t·ª´ AI">
            {aiResponse ? <pre>{aiResponse}</pre> : "Ch∆∞a c√≥ d·ªØ li·ªáu AI."}
          </Card>
          <Button onClick={() => gentitle(aiResponse)}>T·∫°o ti√™u ƒë·ªÅ</Button>
        </Col>
      </Row>
      <Row gutter={16} style={{ marginTop: "20px" }}>
        {/* C·ªôt 3: K·∫øt qu·∫£ AI */}
        <Col span={16}>
          <Card title="üîπ K·∫øt qu·∫£ ti√™u ƒë·ªÅ t·ª´ AI">
            {genTitle && (
              <AiButton
                prompts={[JSON.stringify(genTitle)]}
                onComplete={(data) => setAiTitleResponse(data.response)}
              />
            )}
            {aiTitleResponse ? (
              <div
                style={{
                  maxWidth: "100%",
                  maxHeight: "500px",  // C√≥ th·ªÉ t√πy ch·ªânh chi·ªÅu cao t·ªëi ƒëa
                  overflow: "auto",
                }}
              >
                <pre
                  style={{
                    whiteSpace: "pre-wrap",
                    wordBreak: "break-word",
                  }}
                >
                  {aiTitleResponse}
                </pre>
              </div>
            ) : (
              "Ch∆∞a c√≥ d·ªØ li·ªáu AI."
            )}
          </Card>


        </Col>
        <Col span={8}>
          <Card>
            <div
              style={{
                maxWidth: "100%",
                maxHeight: "600px",  // C√≥ th·ªÉ t√πy ch·ªânh chi·ªÅu cao t·ªëi ƒëa
                overflow: "auto",
              }}
            >
              {
                result?.map((item, index) => (
                  <div key={index}>{index + 1}.{item}</div>
                ))
              }
            </div>
          </Card>
        </Col>
      </Row>
    </Layout>
  );
}
